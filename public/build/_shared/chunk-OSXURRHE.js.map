{
  "version": 3,
  "sources": ["empty-module:@remix-run/node", "../../../app/services/tomorrowAPI.tsx", "../../../app/library/stringManagement.tsx"],
  "sourcesContent": ["module.exports = {};", "// REMIX HMR BEGIN\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\nimport.meta.hot = __hmr__.createHotContext(\n//@ts-expect-error\n\"app/services/tomorrowAPI.tsx\"\n);\nimport.meta.hot.lastModified = \"1705083306276.6807\";\n}\n// REMIX HMR END\n\nimport { json } from \"@remix-run/node\";\nimport { convertToURLfriendly } from \"~/library/stringManagement\";\n\nconst baseUrl= \"https://api.tomorrow.io/v4/weather/\";\n\nexport const getWeatherForecast = async (location: string) => {\n    location = convertToURLfriendly(location);\n    const tomorrowUrl = `${baseUrl}/forecast?location=${location}`; // TODO SAVE IN CONSTANTS\n\n    const data = await fetch(tomorrowUrl, {\n        method: 'GET', \n        headers:{\n          apikey: \"9pIbRDZ6vY2jEUckr5BZ7tSOcJsJScrw\", // TODO SAVE IN.ENV\n          accept: 'application/json'\n        }\n      })\n    return json(await data.json())\n}\n\n\nexport const getRealTimeWeather = async (location: string) => {\n    location = convertToURLfriendly(location);\n    const tomorrowUrl = `${baseUrl}/realtime?location=${location}`; // TODO SAVE IN CONSTANTS\n\n    const data = await fetch(tomorrowUrl, {\n        method: 'GET', \n        headers:{\n          apikey: \"9pIbRDZ6vY2jEUckr5BZ7tSOcJsJScrw\", // TODO SAVE IN.ENV\n          accept: 'application/json'\n        }\n      })\n    return json(await data.json())\n}\n\nexport const getWeatherRecentHistory = async (location: string) => {\n    location = convertToURLfriendly(location);\n    const tomorrowUrl = `${baseUrl}/history/recent?location=${location}`; // TODO SAVE IN CONSTANTS\n\n    const data = await fetch(tomorrowUrl, {\n        method: 'GET', \n        headers:{\n          apikey: \"9pIbRDZ6vY2jEUckr5BZ7tSOcJsJScrw\", // TODO SAVE IN.ENV\n          accept: 'application/json'\n        }\n      })\n    return json(await data.json())\n}", "// REMIX HMR BEGIN\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\nimport.meta.hot = __hmr__.createHotContext(\n//@ts-expect-error\n\"app/library/stringManagement.tsx\"\n);\nimport.meta.hot.lastModified = \"1705083195394.2383\";\n}\n// REMIX HMR END\n\nexport function convertToURLfriendly(string: string) {\n    return string.replace(/ /g, \"-\").toLowerCase();\n}"],
  "mappings": ";;;;;;;;;AAAA;AAAA;AAAA,WAAO,UAAU,CAAC;AAAA;AAAA;;;ACWlB,kBAAqB;;;ACTrB,IAAI,aAAa;AACjB,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EACA;AACA,cAAY,IAAI,eAAe;AAC/B;;;ADNA,IAAI,aAAa;AACjB,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EACA;AACA,cAAY,IAAI,eAAe;AAC/B;",
  "names": []
}
