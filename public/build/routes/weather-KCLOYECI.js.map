{
  "version": 3,
  "sources": ["../../../app/routes/weather.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/weather.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/weather.tsx\");\n  import.meta.hot.lastModified = \"1705081981722.8252\";\n}\n// REMIX HMR END\n\nimport { json } from \"@remix-run/react\";\nimport { getUsers } from \"../../dbConnection/models/users\";\n// or cloudflare/deno\n\nexport let loader = async ({\n  request\n}) => {\n  const users = await getUsers();\n  return json(users, {\n    headers: {\n      'Cache-Control': 'no-store'\n    }\n  });\n};\nexport default function Weather() {\n  //POST MANAGEMENT EXAMPLE\n  //let data = useActionData<typeof action>(); \n  // if(!data){\n  //   data = useLoaderData<typeof loader>();\n  // }\n  return <h1>\n    \"hi from weather.tsx\"\n    </h1>;\n}\n_c = Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;AAwCS;AAvCT,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,6BAA+B,EAAE;AAAA,EAC1E;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAON,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAwB;AACxB,cAAY,IAAI,eAAe;AACjC;AAiBe,SAAR,UAA2B;AAMhC,SAAO,mDAAC,QAAG,qCAAJ;AAAA;AAAA;AAAA;AAAA,SAEL;AACJ;AACA,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,SAAS;AAE1B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
